services:

    carbon_api.grid:
        class: Carbon\ApiBundle\Grid\CarbonGrid
        arguments: [@request_stack, @carbon_api.annotation_reader, @doctrine.orm.default_entity_manager]

    carbon_api.data_table_grid:
        class: Carbon\ApiBundle\Grid\DataTableGrid
        arguments: [@request_stack, @carbon_api.annotation_reader, @doctrine.orm.default_entity_manager]

    carbon_api.serialization_helper:
        class: Carbon\ApiBundle\Service\SerializationHelper
        arguments: ['@jms_serializer', '@request_stack']

    carbon_api.annotation_reader:
        class: Carbon\ApiBundle\Service\CarbonAnnotationReader

    carbon_api.post_upload_listener:
        class: Carbon\ApiBundle\Listener\PostUploadListener
        arguments: ['@service_container']
        tags:
            - name: kernel.event_listener
              event: oneup_uploader.post_persist
              method: onPostUpload

    carbon_api.upload_namer:
        class: Carbon\ApiBundle\Service\UploadNamer
        arguments: ['@logger']

    carbon_api.class_metadata_listener:
        class: Carbon\ApiBundle\Listener\ClassMetadataListener
        arguments: ['@logger']
        tags:
            - { name: doctrine.event_listener, event: loadClassMetadata }

    carbon_api.validator.string_to_object_validator:
        class: Carbon\ApiBundle\Validator\Constraints\StringToObjectValidator
        arguments: [@doctrine.orm.default_entity_manager]
        tags:
            - { name: validator.constraint_validator, alias: string_to_object_validator }

    carbon_api.form.type.mtm:
        class: Carbon\ApiBundle\Form\Type\CryoblockMTMFormType
        arguments: ["@doctrine.orm.default_entity_manager"]
        tags:
            - { name: form.type, alias: cryoblock_mtm }

    carbon_api.form.type.user:
        class: Carbon\ApiBundle\Form\Type\UserFormType
        tags:
            - { name: form.type, alias: user }

    carbon_api.form.type.comment:
        class: Carbon\ApiBundle\Form\Type\CommentFormType
        arguments: ["@doctrine.orm.default_entity_manager"]
        tags:
            - { name: form.type, alias: comment }

    carbon_api.form.type.group:
        class: Carbon\ApiBundle\Form\Type\GroupFormType
        arguments: ["@doctrine.orm.default_entity_manager"]
        tags:
            - { name: form.type, alias: group }

    carbon_api.form.type.group_object_notification:
        class: Carbon\ApiBundle\Form\Type\GroupObjectNotificationFormType
        arguments: ["@doctrine.orm.default_entity_manager"]
        tags:
            - { name: form.type, alias: group_object_notification }

    carbon_api.form.type.user_object_notification:
        class: Carbon\ApiBundle\Form\Type\UserObjectNotificationFormType
        arguments: ["@doctrine.orm.default_entity_manager"]
        tags:
            - { name: form.type, alias: user_object_notification }

    carbon_api.comment_listener:
        class: Carbon\ApiBundle\Listener\CommentListener
        arguments: ["@carbon_api.mailer", "@logger", "%frontend.url%"]
        tags:
            - { name: doctrine.event_listener, event: postPersist }

    carbon_api.mailer:
        class: Carbon\ApiBundle\Service\CryoblockMailer
        arguments: ["@service_container"]

    carbon_api.object_notification_listener:
        class: Carbon\ApiBundle\Listener\ObjectNotificationListener
        arguments: ["@carbon_api.mailer", "@logger", "%mailer_user%", "@security.token_storage", "%frontend.url%"]
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: postSoftDelete }

    carbon_api.cryoblock_voter:
        class: Carbon\ApiBundle\Voter\CommentVoter
        tags:
            - { name: security.voter }
        # small performance boost
        public: false

    # carbon_api.validator.storage_location_validator:
    #     class: Carbon\ApiBundle\Validator\Constraints\Storage\StorageLocationValidator
    #     arguments: ["@doctrine.orm.default_entity_manager", "@security.token_storage"]
    #     tags:
    #         - { name: validator.constraint_validator, alias: storage_location_validator }

    carbon_api.production.request.listener:
        class: Carbon\ApiBundle\Listener\Production\ProductionRequestListener
        tags:
            - { name: doctrine.event_listener, event: onFlush }
